plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	//Trinkets
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	//Player Ability Lib
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}
	//Cloth Config API
	maven { url "https://maven.shedaniel.me/" }
	flatDir {
		dirs 'build/loom-cache'
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	//minecraft version
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	//yarn mappings
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	//fabric loader
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	//fabric api
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	//trinkets
	modImplementation "dev.emi:trinkets:${trinkets_version}"
	//cardinal components api
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_components_version}"
	//player ability lib
	modImplementation "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
	include "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
	//config api
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

//fixes problem i had with intellij and gradle
tasks {
	processResources {
		setDuplicatesStrategy('include')
	}
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	//classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}


// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
}
